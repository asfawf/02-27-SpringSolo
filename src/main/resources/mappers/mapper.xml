<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
 <mapper namespace="boardns">
 		
 		<!-- 오라클의 A_B 와  #{} 를 매치시켜 준다 -->
 		<resultMap type="bvo" id="bvoMap">
 			<id column="board_Num" property="boardNum"/>
 			<result column="board_Title" property="boardTitle"/>
 			<result column="board_Writer" property="boardWriter"/>
 			<result column="board_Content" property="boardContent"/>
 			<result column="board_Original_Filename" property="boardOriginalFilename"/>
 			<result column="board_Rename_Filename" property="boardRenameFilename"/>
 			<result column="board_Date" property="boardDate"/>
 			<result column="board_Level" property="boardLevel"/>
 			<result column="board_Ref" property="boardRef"/>
 			<result column="board_Reply_Seq" property="boardReplySeq"/>
 			<result column="board_Readcount" property="boardReadcount"/>
 		</resultMap>
 		
 		<resultMap type="bvo" id="rsMap">
 			<result column="sdate" property="boardDate" />
 			<result column="board_num" property="boardRef" />
 		</resultMap>
 		
 		<!-- 아래의 resultType은 bvo 즉 BoardVo  -->
 		<select id="tempSelect" resultMap="rsMap">
 			select sysdate as sdate, board_num from board
 		</select>
 
		<insert id="insertid" parameterType="bvo">
			insert into board values
			(
				
					(select NVL(MAX(BOARD_NUM), 0)+1 from board)
					<!-- #== String 형태, $== Int 형태 하지만 Oracle 에서는 34 나 '34' 나 같은 취급이기 때문에  -->
					, #{boardTitle}
					, #{boardWriter}
					, #{boardContent}    
					, #{boardOriginalFilename}
					, #{boardRenameFilename}
					, default
					<choose>
						<when test="boardNum != 0">
							,	(select board_level+1 from BOARD where board_num=  #{boardNum})
							,	(select BOARD_REF from BOARD where board_num= #{boardNum})
							,	(select BOARD_REPLY_SEQ+1 from BOARD where board_num=  #{boardNum})
						</when>
						<otherwise>
							, DEFAULT 
							, (select NVL(MAX(BOARD_NUM), 0)+1 from board)
							, DEFAULT
						</otherwise>
					</choose>
					, DEFAULT
			)
		</insert>
		<update id="updateid">
			update board set
				board_Title = #{boardTitle}
				, board_Content = #{boardContent}
				<!-- 여기서 'test =' 에 작성하게 되는  변수 혹은 함수 명은 Controller 에서 vo 에 대입한 변수명으로 정한다. -->
				<if test="boardOriginalFilename != null and boardOriginalFilename neq ''.toString() ">
					, board_Original_Filename = #{boardOriginalFilename}
				</if>
				<!-- 여기서 'test =' 에 작성하게 되는  변수 혹은 함수 명은 Controller 에서 vo 에 대입한 변수명으로 정한다. ex) if test="boardOriginalFilename eq '' -->
				<if test="boardOriginalFilename == null or boardOriginalFilename eq '' ">
					, board_Original_Filename = null
				</if>
				<choose>
					<!-- 여기서 'test =' 에 작성하게 되는  변수 혹은 함수 명은 Controller 에서 vo 에 대입한 변수명으로 정한다. ex)!boardRenameFilename.equals('') -->
					<when test="boardRenameFilename != null and !boardRenameFilename.equals('')">
						, board_Rename_Filename = #{boardRenameFilename}
					</when>
					<otherwise>
						, board_Rename_Filename = null
					</otherwise>
				</choose>				
				, board_Date = SYSDATE
				where board_Num = #{boardNum}
		</update>
		<update id="updateReadCount" parameterType="int">
			update board set
				board_Readcount = board_Readcount+1
				where board_Num = #{boardNum}
		</update>
		<update id="updateForReply">
			update board set  BOARD_REPLY_SEQ = BOARD_REPLY_SEQ+1 
			    where 
			    board_reply_seq > (select board_reply_seq from board where board_num = #{boardNum})
			    and BOARD_REF = (select BOARD_REF from board where board_num = #{boardNum})
		</update>
		<delete id="deleteid">
			delete from board where board_Num = #{boardNum}
		</delete>
		<select id="selectOneid" resultMap="bvoMap">
			select * from board where board_Num = #{boardNum}
		</select>
		
		<select id="selectListid" resultMap="bvoMap">
			select BOARD_NUM,BOARD_TITLE, BOARD_WRITER, BOARD_CONTENT 
                            , BOARD_ORIGINAL_FILENAME, BOARD_RENAME_FILENAME,BOARD_DATE 
                            , BOARD_LEVEL, BOARD_REF, BOARD_REPLY_SEQ,BOARD_READCOUNT 
                from board 
                <!-- 이거 오류나면 삭제 -->
                <trim prefix="where" prefixOverrides="AND|OR">
		  			<if test="searchWord != null and searchWord neq '' ">
		  				title like #{searchWord}
		  				or content like #{searchWord}
		  			</if>	
		  		</trim>
                order by board_ref desc, board_reply_seq asc
		</select>
		
		<!-- 이곳은 Mybatis 이며 java에서 int 일 경우 현재 페이지에서 resultType에는 _int / _integer 라 작성하고, integer의 경우 현재 페이지에서 resultType에는  int / integer 라 작성한다. -->
		<!-- 페이징 + 검색 기능까지 구현 -->
		<select id="selectOneCount" resultType="_int">
			select count(*) cnt from board
			<trim prefix="where" prefixOverrides="AND|OR">
	  			<if test="searchWord != null and searchWord neq '' ">
	  				title like #{searchWord}
	  				or content like #{searchWord}
	  			</if>	
	  		</trim>
		</select>

		<!-- Procedure -->
		<select id="tempCallableSelect"
				statementType="CALLABLE"
				parameterType="bvo"
				resultType="bvo">
				
				{
					CALL f1()
				}
				
		</select>
  		
  		<!-- 검색 기능 trim -->
  		<select id="tempTrimSelect">
  			select * from board
  			<trim prefix="where" prefixOverrides="AND|OR">
	  			<if test="searchWord != null and searchWord neq '' ">
	  				title like #{searchWord}
	  				or content like #{searchWord}
	  			</if>	
	  		</trim>
  		</select>

		<!-- 삭제 관련 -->
		<delete id="tempForeachDelete">
			delete from board
			<where>
				<!-- or 의 경우 둘 중의 하나만 참이어도 동작 -->
				1 = 0 or  
				<foreach collection="list" item="bnum" open="board_num in (" close=")" separator=",">
					#{bnum}
				</foreach>
			</where>
		</delete>
		
		<when test="category == 'COMMENTS_GOOD_MAP' ">
			<foreach collection="list" item="item" open="INSERT ALL" separator=" " close="SELECT * FROM DUAL">
					INTO COMMENTS_GOOD_MAP VALUES
					(#{recruitNo}, #{recruitNo}, (SELECT GOOD_NO FROM COMMENTS_GOOD WHERE GOOD_NAME = #{item}))
			</foreach>
		</when>
		
		
		
		
		
</mapper>