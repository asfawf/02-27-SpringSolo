<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- properties 이용 -->
	<context:property-placeholder location="classpath:properties/studycloud.properties"/>
	
	<bean class="org.apache.commons.dbcp.BasicDataSource" id="dataSource">
			<property name="driverClassName" value="${jdbc.driverName}"/>
			<property name="url" value="${jdbc.url}"/>
		<!-- 
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
			
		 -->
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>
	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
	</bean>
	<bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSession">
		<constructor-arg ref="sqlSessionFactoryBean"/>	
	</bean>
	
	
	<!-- 트랜잭션 객체 생성-->
	<!-- value 그 이름 그대로의 문자 , ref 그 이름을 가지는 bean 값 -->
	<bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- Aop 기능의 Commit rollback 걸기  ==> Namespace 에서 tx 박스 체크   +  advice : 수동 트랜젝션-->
	<!-- <tx:advice id="txadvice" transaction-manager="transactionManager">
		<tx:attributes>
			select 로 시작하는 모든것  read-only="true" 읽기만 하는 옵션
			<tx:method name="select*" read-only="true"/>
			<tx:method name="insert" rollback-for="Exception"/> insert 를 할때  Exception 발생할 경우 rollback
			<tx:method name="insert" rollback-for="Exception"/>
			<tx:method name="update" rollback-for="Exception"/>
			<tx:method name="delete" rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
	 -->
	
	<tx:annotation-driven/>
	<!-- @<tx:annotation-driven/> -->
	
	
	

</beans>
